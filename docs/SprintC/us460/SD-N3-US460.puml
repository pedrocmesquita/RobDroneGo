@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title Container Sequence Diagram (SD) - US460 (N3)

autonumber

actor "Utente"

"Utente" -> "<<C4:Container>>\n:Visualização": Inicia operação de requisitar tarefa
activate "<<C4:Container>>\n:Visualização"
"<<C4:Container>>\n:Visualização" -> Component: ngInit()
activate Component
Component -> Service: getCurrentUser()
activate Service
Service --> Component : currentUser
deactivate Service
Component -> Service: getBuildings()
activate Service
Service -> "<<C4:Container>>\nMódulo de Gestão\nde Informação" : getBuildings()
activate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
"<<C4:Container>>\nMódulo de Gestão\nde Informação" --> Service : Lista de edifícios
deactivate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
Service --> Component : Lista de edifícios
deactivate Service
Component -> Service : getFloors()
activate Service
Service -> "<<C4:Container>>\nMódulo de Gestão\nde Informação" : getFloors()
activate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
"<<C4:Container>>\nMódulo de Gestão\nde Informação" --> Service : Lista de pisos
deactivate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
Service --> Component : Lista de pisos
deactivate Service
Component -> Service : getRooms()
activate Service

Service -> "<<C4:Container>>\nMódulo de Gestão\nde Informação" : getRooms()
activate "<<C4:Container>>\nMódulo de Gestão\nde Informação"

"<<C4:Container>>\nMódulo de Gestão\nde Informação" --> Service: Lista de salas
deactivate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
Service --> Component: Lista de salas
deactivate Service
Component --> "<<C4:Container>>\n:Visualização" : buildings, floors, rooms
deactivate Component

"<<C4:Container>>\n:Visualização" --> "Utente": Solicita dados da tarefa
deactivate "<<C4:Container>>\n:Visualização"

"Utente" -> "<<C4:Container>>\n:Visualização": Introduz dados solicitados
activate "<<C4:Container>>\n:Visualização"
"<<C4:Container>>\n:Visualização" -> Component : createTask(task)
activate Component
Component -> Service : createSurveillanceTask(task)
activate Service
Service -> Controller : POST /SurveillanceTask/ {task}
activate Controller
Controller -> "DOTNET Service": getAllSync()
activate "DOTNET Service"
"DOTNET Service" -> Repository: findAll()
activate Repository
Repository --> "DOTNET Service": SurveillanceTask[]
deactivate Repository
"DOTNET Service" --> Controller: SurveillanceTask[]
deactivate "DOTNET Service"
Controller -> "DOTNET Service": AddSync(dto)
activate "DOTNET Service"
"DOTNET Service" -> Repository: save(dto)
activate Repository
Repository --> "DOTNET Service": SurveillanceTask
deactivate Repository
"DOTNET Service" --> Controller: SurveillanceTask
deactivate "DOTNET Service"
Controller --> Service: 201 OK SurveillanceTask
deactivate Controller
deactivate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
Service --> Component: 201 OK SurveillanceTask
deactivate Service
Component --> "<<C4:Container>>\n:Visualização" : 201 OK SurveillanceTask
deactivate Component
deactivate "<<C4:Container>>\nMódulo de Gestão\nde Informação"
"Utente" <-- "<<C4:Container>>\n:Visualização": Mensagem de sucesso
deactivate "<<C4:Container>>\n:Visualização"

@enduml