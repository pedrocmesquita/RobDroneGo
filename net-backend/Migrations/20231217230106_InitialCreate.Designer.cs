// <auto-generated />
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    [Migration("20231217230106_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("DDDSample1.Domain.PickupAndDeliveryTasks.PickupAndDeliveryTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryContact")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryRoom")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("PickupContact")
                        .HasColumnType("longtext");

                    b.Property<string>("PickupRoom")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PickupAndDeliveryTasks");
                });

            modelBuilder.Entity("SurveillanceTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Building")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SurveillanceTasks");
                });

            modelBuilder.Entity("DDDSample1.Domain.PickupAndDeliveryTasks.PickupAndDeliveryTask", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.PickupAndDeliveryTasks.PickupAndDeliveryTaskId", "PickupAndDeliveryTaskId", b1 =>
                        {
                            b1.Property<string>("PickupAndDeliveryTaskId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("PickupAndDeliveryTaskIdentifier")
                                .HasColumnType("longtext");

                            b1.HasKey("PickupAndDeliveryTaskId");

                            b1.ToTable("PickupAndDeliveryTasks");

                            b1.WithOwner()
                                .HasForeignKey("PickupAndDeliveryTaskId");
                        });

                    b.Navigation("PickupAndDeliveryTaskId");
                });

            modelBuilder.Entity("SurveillanceTask", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.SurveillanceTasks.SurveillanceTaskId", "SurveillanceTaskId", b1 =>
                        {
                            b1.Property<string>("SurveillanceTaskId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("SurveillanceTaskIdentifier")
                                .HasColumnType("longtext");

                            b1.HasKey("SurveillanceTaskId");

                            b1.ToTable("SurveillanceTasks");

                            b1.WithOwner()
                                .HasForeignKey("SurveillanceTaskId");
                        });

                    b.Navigation("SurveillanceTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
